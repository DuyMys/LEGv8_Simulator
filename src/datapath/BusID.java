package datapath;

public enum BusID {
    REGISTERS_TO_ALU_READ1,
    REGISTERS_TO_MUX_ALUsrc_READ2,
    REGISTERS_TO_DATA_MEMORY_WRITE_DATA,
    
    ALU_TO_AND_GATE,
    ALU_TO_DATA_MEMORY_ADDRESS,
    ALU_TO_MUX_memtoreg_RESULT,
    
    DATA_MEMORY_TO_MUX_memtoreg_READ,
    SHIFT_LEFT_2_TO_ADD,
    ADD_1_TO_MUX_PCSRC,
    ADD_2_TO_MUX_PCSRC,
    
    MUX_PCSRC_TO_PC,

    PC_TO_ADD_1,
    PC_TO_ADD_2,
    PC_TO_INSTRUCTION_MEMORY,
    
    MUX_memtoreg_TO_REGISTERS_WRITE,

    AND_GATE_TO_OR_GATE,
    OR_GATE_TO_MUX_PCSRC,
    ADD_4_TO_ADD_1,
    
    INSTRUCTION_MEMORY_TO_REGISTERS_READ1,
    INSTRUCTION_MEMORY_TO_MUX_reg2loc_0,
    INSTRUCTION_MEMORY_TO_MUX_reg2loc_1,
    INSTRUCTION_MEMORY_TO_REGISTERS_WRITE,
    INSTRUCTION_MEMORY_TO_SIGN_EXTEND,
    INSTRUCTION_MEMORY_TO_ALU_CONTROL,
    INSTRUCTION_MEMORY_TO_CONTROL_UNIT,
    INSTRUCTION_MEMORY_,
    
    MUX_reg2loc_TO_REGISTERS_READ2,
    
    SIGN_EXTEND_TO_MUX_ALUsrc,
    SIGN_EXTEND_TO_SHIFT_LEFT_2,
    MUX_ALUsrc_TO_ALU,
    
    ALU_CONTROL_TO_ALU,

    CONTROL_ALUSRC_TO_MUX_ALUsrc,
    CONTROL_ALUOP_TO_ALU_CONTROL,
    CONTROL_MEMREAD_TO_DATA_MEMORY,
    CONTROL_MEMWRITE_TO_DATA_MEMORY,
    CONTROL_MEMTOREG_TO_MUX_memtoreg,
    CONTROL_REGWRITE_TO_REGISTERS,
    CONTROL_BRANCH_TO_AND_GATE,
    CONTROL_UNCOND_TO_OR_GATE,
    CONTROL_REG2LOC_TO_MUX_reg2loc,
}
